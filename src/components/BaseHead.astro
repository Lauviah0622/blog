---

import metadata from '~/metadata';
import '~/styles/style.css';

export interface Props {
  title: string;
  description: string;
}

const url = new URL(Astro.url.pathname, Astro.site);
const { title, description = metadata.description } = Astro.props;

---

<!-- <ThemeToggle/> -->
<!-- Global Metadata -->
<>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" href="/favicon.svg" type="image/svg+xml">

  <!-- Primary Meta Tags -->
  <title>{title}</title>
  <meta name="title" content={title} />
  {description &&
  <meta name="description" content={description} />}

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={url.href} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content="https://astro.build/social.jpg?v=1" />

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={url.href} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content="https://astro.build/social.jpg?v=1" />

  <script is:inline>
    const storageKey = 'theme-preference';

    const getColorPreference = () => {
      if (localStorage.getItem(storageKey))
        return localStorage.getItem(storageKey)
      else
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
    }

    const reflectPreference = () => {
      document.firstElementChild.setAttribute('data-theme', theme.value);
      document
        .querySelector('#theme-toggle')
        ?.setAttribute('aria-label', theme.value)

    }

    const setPreference = () => {
      localStorage.setItem(storageKey, theme.value)
      reflectPreference()
    }

    const theme = {
      value: getColorPreference()
    }

    reflectPreference()

    const onClick = () => {
      theme.value = theme.value === 'light' ? 'dark' : 'light';
      setPreference()
    }

    window.onload = () => {
      document.querySelector('#theme-toggle').addEventListener('click', onClick)
    }

    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', ({ matches }) => {
      theme.value = matches ? 'dark' : 'light';
      setPreference()
    })

  </script>
</>